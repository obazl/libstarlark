load("@rules_cc//cc:defs.bzl", "cc_binary")

exports_files(["lmoonlark.c", "libmoonlark.c",])

##########
cc_binary(
    name  = "moonlark.so",
    # linkstatic = 1,
    # alwayslink = 1,
    linkshared = 1,
    srcs  = [
        "lmoonlark.c",
        "lmoonlark.h",
    ],
    # data = [
    # ],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
        }) + [
        "-pedantic-errors",

        "-I", "$(GENDIR)/bindings/lua", # moonlark.h
        "-I", "$(GENDIR)/external/moonlark/bindings/lua", # moonlark.h

        # "-I", "$(GENDIR)/src/lib/moonlark",
        # "-I", "$(GENDIR)/external/moonlark/src/lib/moonlark",

        "-I", "$(GENDIR)/sealark",
        "-I", "$(GENDIR)/external/moonlark/sealark",

        "-I", "vendored/uthash",
        "-I", "external/moonlark/vendored/uthash",

        "-I", "vendored/logc",
        "-I", "external/moonlark/vendored/logc",

        "-I", "vendored/lua-5.4.3/src",
        "-I", "external/moonlark/vendored/lua-5.4.3/src",
    ],
    deps = [
        # "//src/lib/lbazel",
        "//sealark",
        "//vendored/lua-5.4.3/src:lua",
        "//vendored/logc",
        "//vendored/uthash",
    ],
    visibility = ["//visibility:public"]
)

cc_library(
    name  = "moonlark",
    # alwayslink = True,
    # linkstatic = 1,
    srcs  = [
        "libmoonlark.c",
        "libmoonlark.h",
        "//sealark:debug.c",
        "//vendored/logc:log.h",
    ],
    hdrs = [
        "libmoonlark.h"
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }),
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-pedantic-errors",
        "-g", "-O0",

        "-I$(GENDIR)/bindings/lua",
        "-I$(GENDIR)/external/moonlark/bindings/lua",

        "-Isealark",  # starlark.h
        "-I$(GENDIR)/sealark",  # starlark.h
        "-I$(GENDIR)/external/moonlark/sealark",  # starlark.h

        "-Ivendored/uthash",
        "-Iexternal/moonlark/vendored/uthash",

        "-Ivendored/logc",
        "-Iexternal/moonlark/vendored/logc",

        "-Ivendored/lua-5.4.3/src",
        "-Iexternal/moonlark/vendored/lua-5.4.3/src",

    ],
    deps = [
        # "//src/lib/lbazel",
        "//sealark",
        "//vendored/lua-5.4.3/src:lua",
        "//vendored/logc",
        "//vendored/uthash",
    ],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs",
    visibility = ["//visibility:public"],
    srcs = [
        "lmoonlark.c",
        "libmoonlark.c",
        "//sealark:debug.c",
        "//sealark:starlark.h",
    ],
    outs = [
        "lmoonlark.h",
        "libmoonlark.h",
    ],
    cmd = "\n".join([
        "SRC1=$(location lmoonlark.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location //vendored/makeheaders) \\",
        "    $(location lmoonlark.c) \\",
        "    $(location libmoonlark.c) \\",
        "    $(location //sealark:debug.c) \\",
        "    $(location //sealark:starlark.h)",
        "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["//vendored/makeheaders"]
)

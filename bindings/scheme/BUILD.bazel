load("@rules_cc//cc:defs.bzl", "cc_binary")
load("@bazel_skylib//rules:common_settings.bzl", "string_list_flag")
load("//:BUILD.bzl", DEFINES="debug_defs")

exports_files(["libsunlark.c"])

cc_library(
    name  = "sunlark",
    visibility = ["//visibility:public"],
    # linkshared = 1,
    # linkstatic = 1,
    srcs  = [
        "libsunlark.c",
        "libsunlark.h",
        "sunlark_bindings.c",
        "sunlark_bindings.h",
        "sunlark_bindings_mutators.c",
        "sunlark_bindings_mutators.h",
        "sunlark_config.c",
        "sunlark_config.h",
        "sunlark_debug.c",
        "sunlark_debug.h",
        "sunlark_dispatcher.c",
        "sunlark_dispatcher.h",
        "sunlark_errors.c",
        "sunlark_errors.h",
        "sunlark_expressors.c",
        "sunlark_expressors.h",
        "sunlark_filters.c",
        "sunlark_filters.h",
        "sunlark_functions.c",
        "sunlark_functions.h",
        "sunlark_loadstmts.c",
        "sunlark_loadstmts.h",
        "sunlark_methods.c",
        "sunlark_methods.h",
        "sunlark_mutators.c",
        "sunlark_mutators.h",
        "sunlark_node.c",
        "sunlark_node.h",
        "sunlark_parsers.c",
        "sunlark_parsers.h",
        "sunlark_predicators.c",
        "sunlark_predicators.h",
        "sunlark_properties.c",
        "sunlark_properties.h",
        "sunlark_serializers.c",
        "sunlark_serializers.h",
        "sunlark_targets.c",
        "sunlark_targets.h",
        "sunlark_vector_mutators.c",
        "sunlark_vector_mutators.h",
        "sunlark_vectors.c",
        "sunlark_vectors.h",
    ],
    hdrs = ["sunlark.h"],
    defines = DEFINES,
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-pedantic-errors",

        "-I$(GENDIR)/bindings/scheme",
        "-I$(GENDIR)/external/moonlark/binding/scheme",

        "-I", "$(GENDIR)/sealark",
        "-I", "$(GENDIR)external/moonlark/sealark",

        "-I", "vendored/logc",
        "-I", "external/moonlark/vendored/logc",

        "-I", "vendored/s7",
        "-I", "external/moonlark/vendored/s7",

        "-I", "vendored/uthash",
        "-I", "external/moonlark/vendored/uthash",
    ],
    deps = [
        "//bazel",
        "//sealark",
        "//vendored/logc",
        "//vendored/uthash",
        "//vendored/s7"
    ],
)

########
genrule(
    name = "mkhdrs",
    srcs = [
        "libsunlark.c",
        "sunlark_bindings.c",
        "sunlark_bindings_mutators.c",
        "sunlark_config.c",
        "sunlark_debug.c",
        "sunlark_dispatcher.c",
        "sunlark_errors.c",
        "sunlark_expressors.c",
        "sunlark_filters.c",
        "sunlark_functions.c",
        "sunlark_loadstmts.c",
        "sunlark_methods.c",
        "sunlark_mutators.c",
        "sunlark_node.c",
        "sunlark_parsers.c",
        "sunlark_predicators.c",
        "sunlark_properties.c",
        "sunlark_serializers.c",
        "sunlark_targets.c",
        "sunlark_vector_mutators.c",
        "sunlark_vectors.c",
        "//bazel:bazel_config.c",
        "//sealark:mkhdrs-export",
        "//vendored/uthash:utarray.h",
        "//vendored/uthash:utstring.h",
    ],
    outs = [
        "libsunlark.h",
        "sunlark_bindings.h",
        "sunlark_bindings_mutators.h",
        "sunlark_config.h",
        "sunlark_debug.h",
        "sunlark_dispatcher.h",
        "sunlark_errors.h",
        "sunlark_expressors.h",
        "sunlark_filters.h",
        "sunlark_functions.h",
        "sunlark_loadstmts.h",
        "sunlark_methods.h",
        "sunlark_mutators.h",
        "sunlark_node.h",
        "sunlark_parsers.h",
        "sunlark_predicators.h",
        "sunlark_properties.h",
        "sunlark_serializers.h",
        "sunlark_targets.h",
        "sunlark_vector_mutators.h",
        "sunlark_vectors.h",
    ],
    cmd = "\n".join([
        "SRC1=$(location libsunlark.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location //vendored/makeheaders) \\",
        "    $(locations //vendored/uthash:utarray.h) \\",
        "    $(locations //vendored/uthash:utstring.h) \\",
        "    $(location //bazel:bazel_config.c) \\",
        "    $(location //sealark:mkhdrs-export) \\",
        "    $(location libsunlark.c) \\",
        "    $(location sunlark_bindings.c) \\",
        "    $(location sunlark_bindings_mutators.c) \\",
        "    $(location sunlark_config.c) \\",
        "    $(location sunlark_debug.c) \\",
        "    $(location sunlark_dispatcher.c) \\",
        "    $(location sunlark_errors.c) \\",
        "    $(location sunlark_expressors.c) \\",
        "    $(location sunlark_filters.c) \\",
        "    $(location sunlark_functions.c) \\",
        "    $(location sunlark_loadstmts.c) \\",
        "    $(location sunlark_methods.c) \\",
        "    $(location sunlark_mutators.c) \\",
        "    $(location sunlark_node.c) \\",
        "    $(location sunlark_parsers.c) \\",
        "    $(location sunlark_predicators.c) \\",
        "    $(location sunlark_properties.c) \\",
        "    $(location sunlark_serializers.c) \\",
        "    $(location sunlark_targets.c) \\",
        "    $(location sunlark_vector_mutators.c) \\",
        "    $(location sunlark_vectors.c)",
        "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["//vendored/makeheaders"],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs-export",
    srcs = [
        "libsunlark.c",
        "sunlark_bindings.c",
        "sunlark_bindings_mutators.c",
        "sunlark_config.c",
        "sunlark_debug.c",
        "sunlark_dispatcher.c",
        "sunlark_errors.c",
        "sunlark_expressors.c",
        "sunlark_filters.c",
        "sunlark_functions.c",
        "sunlark_loadstmts.c",
        "sunlark_methods.c",
        "sunlark_mutators.c",
        "sunlark_node.c",
        "sunlark_parsers.c",
        "sunlark_predicators.c",
        "sunlark_properties.c",
        "sunlark_serializers.c",
        "sunlark_targets.c",
        "sunlark_vector_mutators.c",
        "sunlark_vectors.c",
        "//bazel:bazel_config.c",
        # "//sealark:sealark.h", ## mkhdrs-export",
        "//vendored/uthash:utarray.h",
    ],
    outs = [
        "sunlark.h",
    ],
    cmd = "\n".join([
        "SRC1=$(location libsunlark.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location //vendored/makeheaders) -H \\",
        "    $(locations //vendored/uthash:utarray.h) \\",
        "    $(location //bazel:bazel_config.c) \\",
        # "    $(location //sealark:sealark.h) \\",
        "    $(location libsunlark.c) \\",
        "    $(location sunlark_bindings.c) \\",
        "    $(location sunlark_bindings_mutators.c) \\",
        "    $(location sunlark_config.c) \\",
        "    $(location sunlark_debug.c) \\",
        "    $(location sunlark_dispatcher.c) \\",
        "    $(location sunlark_errors.c) \\",
        "    $(location sunlark_expressors.c) \\",
        "    $(location sunlark_filters.c) \\",
        "    $(location sunlark_functions.c) \\",
        "    $(location sunlark_loadstmts.c) \\",
        "    $(location sunlark_methods.c) \\",
        "    $(location sunlark_mutators.c) \\",
        "    $(location sunlark_node.c) \\",
        "    $(location sunlark_parsers.c) \\",
        "    $(location sunlark_predicators.c) \\",
        "    $(location sunlark_properties.c) \\",
        "    $(location sunlark_serializers.c) \\",
        "    $(location sunlark_targets.c) \\",
       "    $(location sunlark_vector_mutators.c) \\",
        "    $(location sunlark_vectors.c) \\",
        "    > $@",
    ]),
    tools = ["//vendored/makeheaders"],
    visibility = ["//visibility:public"]
)

load("@rules_cc//cc:defs.bzl", "cc_library")

exports_files(["bazel_config.c"])

##########
cc_library(
    name  = "config",
    linkstatic = 1,
    srcs  = [
        "bazel_config.c",
        "bazel_config.h",
        "//vendored/logc:log.h"
   ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }),
    copts = select({
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-g", "-O0",
        "-pedantic-errors",

        "-I", "$(GENDIR)/src/config",
        "-I", "$(GENDIR)/external/moonlark/src/config",

        "-I", "vendored/uthash",
        "-I", "external/moonlark/vendored/uthash",

        "-I", "vendored/logc",
        "-I", "external/moonlark/vendored/logc",
    ],
    deps = [
        "//vendored/logc",
        "//vendored/uthash"
    ],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs",
    srcs = [
        "bazel_config.c",
    ],
    outs = [
        "bazel_config.h"
    ],
    cmd = "\n".join([
        "SRC1=$(location bazel_config.c)",
        "SRCDIR1=`dirname $$SRC1`",
        # "SRC2=$(location //vendored/uthash/utarray.h)",
        # "SRCDIR2=`dirname $$SRC2`",
        "$(location //vendored/makeheaders) \\",
        "    $(location bazel_config.c) ",
        "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["//vendored/makeheaders"],
    visibility = ["//visibility:public"]
)

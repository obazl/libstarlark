load("@rules_cc//cc:defs.bzl", "cc_library")

exports_files(["lbazel.c"])

##########
cc_library(
    name  = "lbazel",
    # alwayslink = True,
    linkstatic = 1,
    srcs  = [
        "lbazel.c",
    ],
    data = [
        "//moonlark/lua:edit.lua"
    ],
    hdrs = [
        "lbazel.h",
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }),
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-pedantic-errors",
        "-g", "-O0",

        "-I$(GENDIR)/src/lib/lbazel",
        "-I$(GENDIR)/external/moonlark/src/lib/lbazel",

        "-Ivendored/uthash",
        "-Iexternal/moonlark/vendored/uthash",

        "-Ivendored/logc",
        "-Iexternal/moonlark/vendored/logc",

        "-Ivendored/lua-5.4.3/src",
        "-Iexternal/moonlark/vendored/lua-5.4.3/src",

    ],
    # linkopts = [
    #     "-L/usr/local/lib",     # FIXME
    #     "-llua",
    # ],
    deps = [
        "//vendored/lua-5.4.3/src:lua",
        "//vendored/logc",
        "//vendored/uthash",
    ],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs",
    visibility = ["//visibility:public"],
    srcs = [
        "lbazel.c",
        "//src/lib/starlark:constants.c",
        "//src/lib/starlark:nodes.c"
    ],
    outs = [
        "lbazel.h",
    ],
    cmd = "\n".join([
        "SRC1=$(location lbazel.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location //vendored/makeheaders) \\",
        "    $(location //src/lib/starlark:constants.c) \\",
        "    $(location //src/lib/starlark:nodes.c) \\",
        "    $(location lbazel.c)",
        "cp $$SRCDIR1/*.h $@",
    ]),
    tools = ["//vendored/makeheaders"]
)

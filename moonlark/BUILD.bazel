exports_files(["config.c"])

# Target //moonlark:repl launches a lua interpreter with integrated moonlark support.  The load path
cc_binary(
    name = "repl",
    srcs = [
        # we build the  lua interpreter here ....
        "//vendored/lua-5.4.3/src:lua.c",
        "//vendored/lua-5.4.3/src:lua.h",
    ],
    data = [
        "//moonlark/lua:repl.lua"
    ],
    # ... linking to augmented liblua:
    deps = [
        # lua runtime with integrated moonlark
        "//vendored/lua-5.4.3/src:lualark"
    ],
    copts = [
        "-std=c11",
        "-pedantic-errors",
    ],
    defines = [
        "LUA_USE_MACOSX",
        "MOONLARK"
    ],
    linkopts = [
        "-lm",
        "-ldl",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name  = "edit",
    linkstatic = 1,
    srcs  = [
        "edit.c",
        "edit.h",
        "config.c",
        "config.h",
        # "//src/lib/starlark:debug.c",
        # "//src/lib/starlark:debug.h",
    ],
    # data = [
    #     "//moonlark/lua:edit.lua"
    # ],
    defines = ["DEBUG", "DEBUG_TRACE"],
    copts = [
        "-std=c11",
        "-pedantic-errors",

        "-I$(GENDIR)/moonlark",
        "-I$(GENDIR)/external/moonlark/moonlark",

        "-I", "$(GENDIR)/src/lib/starlark",
        "-I", "$(GENDIR)external/moonlark/src/lib/starlark",

        "-I", "$(GENDIR)/src/lib/moonlark",
        "-I", "$(GENDIR)/external/moonlark/src/lib/moonlark", # libmoonlark.h

        "-I", "vendored/logc",
        "-I", "external/moonlark/vendored/logc",

        "-I", "vendored/lua-5.4.3/src",
        "-I", "external/moonlark/vendored/lua-5.4.3/src",

        "-I", "vendored/uthash",
        "-I", "external/moonlark/vendored/uthash",
    ],
    deps = [
        "//src/lbazel",
        "//src/lib/moonlark",

        "//vendored/logc",
        "//vendored/uthash",

        # libmoonlark pulls in lua rt, but not headers
        "//vendored/lua-5.4.3/src:lua"
    ],
)

# cc_library(
#     name  = "config",
#     visibility = ["//visibility:public"],
#     linkstatic = 1,
#     srcs  = [
#         "config.c",
#     ],
#     hdrs = [
#         "config.h",
#     ],
#     defines = ["DEBUG", "DEBUG_TRACE"],
#     copts = [
#         "-std=c11",
#         "-pedantic-errors",

#         "-I$(GENDIR)/moonlark",
#         "-I$(GENDIR)/external/moonlark/moonlark",

#         "-I", "$(GENDIR)/src/lib/starlark",
#         "-I", "$(GENDIR)external/moonlark/src/lib/starlark",

#         "-I", "$(GENDIR)/src/lib/moonlark",
#         "-I", "$(GENDIR)/external/moonlark/src/lib/moonlark", # libmoonlark.h

#         "-I", "vendored/logc",
#         "-I", "external/moonlark/vendored/logc",

#         "-I", "vendored/lua-5.4.3/src",
#         "-I", "external/moonlark/vendored/lua-5.4.3/src",

#         "-I", "vendored/uthash",
#         "-I", "external/moonlark/vendored/uthash",
#     ],
#     deps = [
#         "//src/lbazel",
#         "//src/lib/moonlark:moonlark",
#         "//vendored/logc",
#         "//vendored/uthash",
#         # libmoonlark pulls in liblualark
#         # "//vendored/lua-5.4.3/src:lua"
#     ],
# )

genrule(
    name = "mkhdrs",
    srcs = [
        "//src/lbazel:lbazel.c",
        "edit.c",
        "config.c",
    ],
    outs = [
        "edit.h",
        "config.h",
    ],
    cmd = "\n".join([
        "SRC1=$(location edit.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location //vendored/makeheaders) \\",
        "    $(location //src/lbazel:lbazel.c) \\",
        "    $(location edit.c) \\",
        "    $(location config.c)",
        "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["//vendored/makeheaders"],
    visibility = ["//visibility:public"]
)

load("@rules_cc//cc:defs.bzl", "cc_library")

load("@makeheaders//src:RULES.bzl", "makeheaders")

TOOLCHAINS = ["//:module_profiles"]

test_suite(
    name = "test",
    tests = [
        "//test/sys",
        "//test/unit/parser",
        "//test/unit/sealark",
    ])

################################################################
## testing lexis, syntaxis
cc_binary(
    name  = "lex_file",
    srcs  = [
        "lex_file.c",
        ":mkhdrs"
    ],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-pedantic-errors",

        "-I", "$(GENDIR)/src",
        "-I", "$(GENDIR)/test",

        "-I$(@liblogc)//src",
        "-I$(@uthash)//src",
    ],
    defines = ["DEBUG", "DEBUG_TRACE"],
    deps = [
        "//src:sealark",
        "@liblogc//src:logc",
        "@uthash//src:uthash"
    ],
    # linkopts = select({
    #     "//bzl/host:linux": [],
    #     "//bzl/host:macos": ["-framework", "CoreServices"],
    # }),
    linkstatic = 1,
    toolchains = TOOLCHAINS
)

##########
cc_binary(
    name  = "parse_file",
    srcs  = [
        "parse_file.c",
        ":mkhdrs"
        # "//src:sealark_debug.c",
    ],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-pedantic-errors",

        "-I$(GENDIR)/test",
        "-I$(GENDIR)/external/sealark/test",

        "-I$(GENDIR)/src",
        "-I$(@liblogc)//src",
        "-I$(@uthash)//src",
    ],
    defines = ["DEBUG", "DEBUG_TRACE"],
    deps = [
        "//src:sealark",
        "@liblogc//src:logc",
        "@uthash//src:uthash"
    ],
    linkstatic = 1,
    toolchains = TOOLCHAINS
)

############
makeheaders(
    name = "mkhdrs",
    hdrs_srcs = [
        "lex_file.c",
        "parse_file.c",
    ],
    additional_srcs = [
        "//src:sealark.h",
    ],
    visibility = ["//visibility:public"]
)

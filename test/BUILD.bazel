load("@rules_cc//cc:defs.bzl", "cc_library")

test_suite(
    name = "test",
    tests = [
        ":call",
        ":dict",
        ":expressions",
        ":keywords",
        ":lists",
        ":numbers",
        ":punctuation",
        ":slices",
        ":statements",
        ":strings",

        ":roundtrip",
    ])

cc_test(
    name = "roundtrip",
    srcs = [
        "test_roundtrip.c",
        "test_roundtrip.h",
        "roundtrip.c",
        "roundtrip.h",
        "@uthash//:include",
    ],
    data = [
        "//data/bazel/examples:BUILD.test",
        "//data/bazel/examples/cpp:BUILD.test"
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

# LEXIS
cc_test(
    name = "keywords",
    srcs = [
        "lex_keywords.c",
        "lex_keywords.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

cc_test(
    name = "numbers",
    srcs = [
        "lex_numbers.c",
        "lex_numbers.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/src/include",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

cc_test(
    name = "punctuation",
    srcs = [
        "lex_punctuation.c",
        "lex_punctuation.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

cc_test(
    name = "strings",
    srcs = [
        "lex_strings.c",
        "lex_strings.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

# SYNTAX
cc_test(
    name = "call",
    srcs = [
        "syntax_call_expr.c",
        "syntax_call_expr.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

cc_test(
    name = "dict",
    srcs = [
        "syntax_dict.c",
        "syntax_dict.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

cc_test(
    name = "expressions",
    srcs = [
        "syntax_expressions.c",
        "syntax_expressions.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

cc_test(
    name = "lists",
    srcs = [
        "syntax_lists.c",
        "syntax_lists.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

cc_test(
    name = "slices",
    srcs = [
        "syntax_slices.c",
        "syntax_slices.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

cc_test(
    name = "statements",
    srcs = [
        "syntax_statements.c",
        "syntax_statements.h",
        "@uthash//:include",
    ],
    copts = [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Ivendored/logc",
        "-Ivendored/unity",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//src:starlark",
        "//vendored/logc",
        "//vendored/unity"
    ],
)

genrule(
    name = "mkhdrs",
    srcs = [
        "roundtrip.c",
        "lex_keywords.c",
        "lex_numbers.c",
        "lex_punctuation.c",
        "lex_strings.c",
        "syntax_call_expr.c",
        "syntax_dict.c",
        "syntax_expressions.c",
        "syntax_lists.c",
        "syntax_slices.c",
        "syntax_statements.c",
        "test_roundtrip.c",
    ],
    outs = [
        "roundtrip.h",
        "lex_keywords.h",
        "lex_numbers.h",
        "lex_punctuation.h",
        "lex_strings.h",
        "syntax_call_expr.h",
        "syntax_dict.h",
        "syntax_expressions.h",
        "syntax_lists.h",
        "syntax_slices.h",
        "syntax_statements.h",
        "test_roundtrip.h",
    ],
    cmd = "\n".join([
        "SRC1=$(location lex_strings.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location @makeheaders//:makeheaders) \\",
        "    $(location roundtrip.c) \\",
        "    $(location lex_keywords.c) \\",
        "    $(location lex_numbers.c) \\",
        "    $(location lex_punctuation.c) \\",
        "    $(location lex_strings.c) \\",
        "    $(location syntax_call_expr.c) \\",
        "    $(location syntax_dict.c) \\",
        "    $(location syntax_expressions.c) \\",
        "    $(location syntax_lists.c) \\",
        "    $(location syntax_slices.c) \\",
        "    $(location syntax_statements.c) \\",
        "    $(location test_roundtrip.c)",
        "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["@makeheaders//:makeheaders"],
    visibility = ["//visibility:public"]
)

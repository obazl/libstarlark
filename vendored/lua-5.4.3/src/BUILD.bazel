exports_files(["lua.c", "lua.h"])

# builds lua augmented with moonlark module

filegroup(
    name = "srcs",
    visibility = ["//moonlark:__pkg__"],
    srcs = [
        "lapi.c",
        "lapi.h",
        "lauxlib.c",
        # "lauxlib.h",
        "lbaselib.c",
        "lcode.c",
        "lcode.h",
        "lcorolib.c",
        "lctype.c",
        "lctype.h",
        "ldblib.c",
        "ldebug.c",
        "ldebug.h",
        "ldo.c",
        "ldo.h",
        "ldump.c",
        "lfunc.c",
        "lfunc.h",
        "lgc.c",
        "lgc.h",
        "linit.c",
        "liolib.c",
        "ljumptab.h",
        "llex.c",
        "llex.h",
        "llimits.h",
        "lmathlib.c",
        "lmem.c",
        "lmem.h",
        "loadlib.c",
        "lobject.c",
        "lobject.h",
        "lopcodes.c",
        "lopcodes.h",
        "lopnames.h",
        "loslib.c",
        "lparser.c",
        "lparser.h",
        "lprefix.h",
        "lstate.c",
        "lstate.h",
        "lstring.c",
        "lstring.h",
        "lstrlib.c",
        "ltable.c",
        "ltable.h",
        "ltablib.c",
        "ltm.c",
        "ltm.h",
        # "lua.c",
        # "lua.h",
        "lua.hpp",
        # "luac.c",
        "luaconf.h",
        "lualib.h",
        "lundump.c",
        "lundump.h",
        "lutf8lib.c",
        "lvm.c",
        "lvm.h",
        "lzio.c",
        "lzio.h",
    ]
)

cc_library(
    name = "lua",
    srcs = [":srcs"],
    # strip_include_prefix = "/src",
    hdrs = [
        "lauxlib.h",
        "lprefix.h",
        "lua.h",
        "luaconf.h",
        "lualib.h",
    ],
    copts = [
        "-I", "bindings/lua",
        "-I", "external/uthash/include",
        "-I", "$(GENDIR)/src", # starlark.h
        # "-I", "$(GENDIR)/src/lua", # starlark_lua_api.h,
        # "-I", "$(GENDIR)/bindings/lua", # moonlark.h
        # "-I", "vendored/logc",
        "-I", "vendored/lua-5.4.3/src",
    ],
    deps = [
        # "//src:starlark",
        # we cannot depend on starlark_lua on pain of circularity
        # instead we are compiling it here
        # # "//src/lib/moonlark:moonlark,
        # "//vendored/logc",
    ],
    defines = [
        "LUA_USE_MACOSX",       # FIXME: select platform
        ## FIXME: use libedit or editline
        "LUA_USE_READLINE"      # FIXME: select
    ],
    # deps = [
    #     "//bindings/lua:depper"
    # ],
    linkopts = [
        "-lm",
        "-ldl",
        "-lreadline"
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "lualark",
    srcs = select({
        # ONLY FOR //moonlark:repl!
        "//conditions:default": [
            "//bindings/lua:moonlark.c",
            "//bindings/lua:moonlark.h",
            # moonlark C impl code:
            "//src/lib/moonlark:moonlark_api.c",
            "//src/lib/moonlark:moonlark_api.h",
            "//src/lib/moonlark:moonlark_config.c",
            "//src/lib/moonlark:moonlark_config.h",
        ]
    }) + [":srcs"],
    #     "lapi.c",
    #     "lapi.h",
    #     "lauxlib.c",
    #     # "lauxlib.h",
    #     "lbaselib.c",
    #     "lcode.c",
    #     "lcode.h",
    #     "lcorolib.c",
    #     "lctype.c",
    #     "lctype.h",
    #     "ldblib.c",
    #     "ldebug.c",
    #     "ldebug.h",
    #     "ldo.c",
    #     "ldo.h",
    #     "ldump.c",
    #     "lfunc.c",
    #     "lfunc.h",
    #     "lgc.c",
    #     "lgc.h",
    #     "linit.c",
    #     "liolib.c",
    #     "ljumptab.h",
    #     "llex.c",
    #     "llex.h",
    #     "llimits.h",
    #     "lmathlib.c",
    #     "lmem.c",
    #     "lmem.h",
    #     "loadlib.c",
    #     "lobject.c",
    #     "lobject.h",
    #     "lopcodes.c",
    #     "lopcodes.h",
    #     "lopnames.h",
    #     "loslib.c",
    #     "lparser.c",
    #     "lparser.h",
    #     "lprefix.h",
    #     "lstate.c",
    #     "lstate.h",
    #     "lstring.c",
    #     "lstring.h",
    #     "lstrlib.c",
    #     "ltable.c",
    #     "ltable.h",
    #     "ltablib.c",
    #     "ltm.c",
    #     "ltm.h",
    #     # "lua.c",
    #     # "lua.h",
    #     "lua.hpp",
    #     # "luac.c",
    #     "luaconf.h",
    #     "lualib.h",
    #     "lundump.c",
    #     "lundump.h",
    #     "lutf8lib.c",
    #     "lvm.c",
    #     "lvm.h",
    #     "lzio.c",
    #     "lzio.h",
    # ],
    # strip_include_prefix = "/src",
    hdrs = [
        "lauxlib.h",
        "lprefix.h",
        "lua.h",
        "luaconf.h",
        "lualib.h",
    ],
    copts = [
        "-I", "bindings/lua",
        "-I", "external/uthash/include",
        "-I", "$(GENDIR)/src", # starlark.h
        "-I", "$(GENDIR)/src/lib/moonlark", # libmoonlark.h
        "-I", "$(GENDIR)/bindings/lua", # moonlark.h
        "-I", "vendored/logc",
        "-I", "vendored/lua-5.4.3/src",
    ],
    deps = [
        "//src:starlark",
        "//src/lib/moonlark",
        "//vendored/logc",
    ],
    defines = [
        "MOONLARK",
        "LUA_USE_MACOSX",       # FIXME: select platform
        ## FIXME: use libedit or editline
        "LUA_USE_READLINE"      # FIXME: select
    ],
    # deps = [
    #     "//bindings/lua:depper"
    # ],
    linkopts = [
        "-lm",
        "-ldl",
        "-lreadline"
    ],
    visibility = ["//visibility:public"],
)

################################################################
# make(
#     name = "lua",
#     args = [
#         # "local"
#         # "install", "macosx",
#         "INSTALL_TOP=external/lua/lua/lib"
#     ],
#     env = {
#         "PATH": "/usr/local/opt/coreutils/libexec/gnubin/:$PATH",
#         # "INSTALL_TOP": "lua/src"
#     },
#     targets = ["macosx", "install"],
#     # targets = select({
#     #     "@//bzl/host:linux": ["linus"],
#     #     "@//bzl/host:macos": ["macosx"],
#     # }),
#     lib_source = ":all",
#     # lib_name   = "src",
#     # out_bin_dir = "src",
#     # out_binaries = ["lua", "luac"],
#     out_lib_dir = ".",
#     out_static_libs = ["liblua.a"],
#     postfix_script = "\n".join([
#         "cd $EXT_BUILD_ROOT && ls -l",
#         "touch $EXT_BUILD_ROOT/external/lua/src/liblua.a",
#         # "cd -",
#         # "make local",
#         # "set -x",
#         # "echo PWD: `pwd`",
#         # "find ./ -name 'liblua.a'",
#         # "tree bazel-out",
#         # "cp external/lua/src/liblua.a bazel-out/daarwin-fastbuild/tool/obazl/lua/src"
#     ])
# )

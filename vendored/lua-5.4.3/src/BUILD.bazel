exports_files(["lua.c", "lua.h"])

# builds lua augmented with moonlark module

filegroup(
    name = "srcs",
    visibility = ["//moonlark:__pkg__"],
    srcs = [
        "lapi.c",
        "lapi.h",
        "lauxlib.c",
        # "lauxlib.h",
        "lbaselib.c",
        "lcode.c",
        "lcode.h",
        "lcorolib.c",
        "lctype.c",
        "lctype.h",
        "ldblib.c",
        "ldebug.c",
        "ldebug.h",
        "ldo.c",
        "ldo.h",
        "ldump.c",
        "lfunc.c",
        "lfunc.h",
        "lgc.c",
        "lgc.h",
        "linit.c",
        "liolib.c",
        "ljumptab.h",
        "llex.c",
        "llex.h",
        "llimits.h",
        "lmathlib.c",
        "lmem.c",
        "lmem.h",
        "loadlib.c",
        "lobject.c",
        "lobject.h",
        "lopcodes.c",
        "lopcodes.h",
        "lopnames.h",
        "loslib.c",
        "lparser.c",
        "lparser.h",
        "lprefix.h",
        "lstate.c",
        "lstate.h",
        "lstring.c",
        "lstring.h",
        "lstrlib.c",
        "ltable.c",
        "ltable.h",
        "ltablib.c",
        "ltm.c",
        "ltm.h",
        # "lua.c",
        # "lua.h",
        "lua.hpp",
        # "luac.c",
        "luaconf.h",
        "lualib.h",
        "lundump.c",
        "lundump.h",
        "lutf8lib.c",
        "lvm.c",
        "lvm.h",
        "lzio.c",
        "lzio.h",
    ]
)

cc_library(
    name = "lua",
    srcs = [":srcs"],
    hdrs = [
        "lauxlib.h",
        "lprefix.h",
        "lua.h",
        "luaconf.h",
        "lualib.h",
    ],
    copts = select({
        # Makefile says gnu99, but we want c11
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-O2",
        "-Wall",
        "-Wextra",
    ],
    defines = select({
        "//bzl/host:macos": [ "LUA_USE_MACOSX" ],
        "//bzl/host:linux": [ "LUA_USE_LINUX" ],
        "//conditions:default": {}
    }) + [
        "LUA_COMPAT_5_3",
        "LUA_USE_READLINE" ## FIXME: use libedit or editline
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        "-lm",
        "-lreadline" ## FIXME: use libedit or editline
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "lualark",
    srcs = select({
        # ONLY FOR //moonlark:repl!
        "//conditions:default": [
            "//bindings/lua:lmoonlark.c",
            "//bindings/lua:lmoonlark.h",

        ]
    }) + [":srcs"],
    hdrs = [
        "lauxlib.h",
        "lprefix.h",
        "lua.h",
        "luaconf.h",
        "lualib.h",
    ],
    copts = select({
        # Makefile says gnu99, but we want c11
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-O2",
        "-Wall",
        "-Wextra",

        "-I", "bindings/lua",
        "-I", "$(GENDIR)/bindings/lua",
        "-I", "$(GENDIR)/external/moonlark/bindings/lua",

        "-I", "vendored/logc",
        "-I", "external/moonlark/vendored/logc",

        "-I", "vendored/lua-5.4.3/src",
        "-I", "external/moonlark/vendored/lua-5.4.3/src",

        "-I", "vendored/uthash",
        "-I", "external/moonlark/vendored/uthash",
    ],
    deps = [
        "//bindings/lua:moonlark",
        "//vendored/logc",
        "//vendored/uthash",
    ],
    defines = select({
        "//bzl/host:macos": [ "LUA_USE_MACOSX" ],
        "//bzl/host:linux": [ "LUA_USE_LINUX" ],
        "//conditions:default": {}
    }) + [
        "LUA_COMPAT_5_3",
        "LUA_USE_READLINE", ## FIXME: use libedit or editline
        "MOONLARK" # enable moonlark preload (linit.h)
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        "-lm",
        "-lreadline" ## FIXME: use libedit or editline
    ],
    visibility = ["//visibility:public"],
)
